//Given an array arr[] of N positive integers which can contain integers from 1 to P where elements can be repeated or can be absent from the array. Your task is to count the frequency of all numbers from 1 to N. Make in-place changes in arr[], such that arr[i] = frequency(i). Assume 1-based indexing.
Note: The elements greater than N in the array can be ignored for counting and do modify the array in-place. 


class Solution{
    public:
    //Function to count the frequency of all elements from 1 to N in the array.
    void frequencyCount(vector<int>& arr,int N, int P)
    { 
        int i=0;
        while(i<N){
            if(arr[i]<=0 or arr[i]>N){
                i++;
                continue;
            }
            int index = arr[i]-1;
            if(arr[index]>0){
                arr[i] = arr[index];
                arr[index] = -1;
            }
            else{
                arr[i]=0;
                arr[index]--;
                i++;
            }
        }
        for(i=0;i<N;i++){
            if(arr[i]<0){
                arr[i] = -1*arr[i];
            }
            else{
                arr[i]=0;
            }
        }
       
    }
};
